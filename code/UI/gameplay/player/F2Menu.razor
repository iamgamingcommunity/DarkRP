@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent
@namespace Sandbox

<root class="@(IsShowingF2Menu ? "" : "hide")">
	<div class="options">
		<!-- <div class="buttonbackgroundbackplate"> -->
				<!-- <div class="inner">
					<div class="fill" style="width:">

		</div>	
				</div> -->
			<div class="buttonholder">
				<div class="buttonbackground"onclick=@DisallowOwnership>
					<div class="buttontext">
						Disallow Ownership
					</div>
				</div>

				<div class="buttonbackground"onclick=@BuyDoor>
					<div class="buttontext">
						Buy Door
					</div>
				</div>
				<div class="buttonbackground"onclick=@EditDoorGroup>
					<div class="buttontext">
						Edit Door Groups
					</div>
				</div>
		<!-- </div> -->
		</div>
	</div>
</root>

@code
{
	public delegate void ActionGraphEditDoorGroup();
	[Property, Feature("Player Hud Info")]
	public ActionGraphEditDoorGroup GraphEditDoorGroup { get; set; }

	public delegate void ActionGraphBuyDoor();
	[Property, Feature("Player Hud Info")]
	public ActionGraphBuyDoor GraphBuyDoor { get; set; }

	public delegate void ActionGraphDisallowOwnership();
	[Property, Feature("Player Hud Info")]
	public ActionGraphDisallowOwnership GraphDisallowOwnership { get; set; }

	
	public bool IsShowingF2Menu {get; set;}
	public bool IsSuperAdmin {get; set;}


	
	void EditDoorGroup()
	{
	 	GraphEditDoorGroup?.Invoke();
	}

	void BuyDoor()
	{
		GraphBuyDoor?.Invoke();
	}

	void DisallowOwnership()
	{
		GraphDisallowOwnership?.Invoke();
	}













	<!-- protected override void OnUpdate()
	{
		base.OnUpdate();

		if( !IsProxy && Input.Pressed( "Slot0" ) )
		{
			Log.Info( "Pressed 9!" );
			IsShowingF2Menu = !IsShowingF2Menu;
		}
	} -->

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// 
	///</summary>
	protected override int BuildHash() => System.HashCode.Combine( IsShowingF2Menu );
}