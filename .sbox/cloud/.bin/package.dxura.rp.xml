<?xml version="1.0"?>
<doc>
    <assembly>
        <name>package.dxura.rp</name>
    </assembly>
    <members>
        <member name="T:Dxura.RP.Game.GeneralApiClient">
            <summary>
                Static client for the RP API (General)
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.SboxApiClient">
            <summary>
                Static client for the RP API (Player)
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.ServerApiClient">
            <summary>
                Static client for the RP API (Server)
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.ServerApiClient.ModerateText(System.String,System.Int64,System.String,System.String)">
            <summary>
            Moderate text using the OpenAI to detect hate speech, etc.
            </summary>
            <param name="name">The player name</param>
            <param name="steamId">the player id</param>
            <param name="context">What is the reason for this moderation</param>
            <param name="content">What to moderate</param>
            <returns>True if flagged</returns>
        </member>
        <member name="T:Dxura.RP.Game.GameConfig">
            <summary>
            Base config of DarkRP game 2014 (standard roleplay mode)
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.Cooldown">
            <summary>
                Manages cooldown timers for game actions.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Cooldown.ProcessCooldowns">
            <summary>
                Checks for completed cooldowns at the end of each fixed update.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Cooldown.IsOnCooldown(System.String)">
            <summary>
                Checks if a cooldown is currently active.
            </summary>
            <param name="cooldownId">The unique identifier for the cooldown.</param>
            <returns>True if the cooldown is active, false otherwise.</returns>
        </member>
        <member name="M:Dxura.RP.Game.Cooldown.StartCooldown(System.String,System.Single)">
            <summary>
                Starts a cooldown with the specified duration.
            </summary>
            <param name="cooldownId">The unique identifier for the cooldown.</param>
            <param name="duration">The duration in seconds.</param>
        </member>
        <member name="M:Dxura.RP.Game.Cooldown.CancelCooldown(System.String)">
            <summary>
                Cancels an active cooldown.
            </summary>
            <param name="cooldownId">The unique identifier for the cooldown.</param>
        </member>
        <member name="M:Dxura.RP.Game.Cooldown.GetRemainingTime(System.String)">
            <summary>
                Get remaining cooldown time in seconds.
            </summary>
            <param name="cooldownId">The unique identifier for the cooldown.</param>
            <returns>The remaining time in seconds, or 0 if not on cooldown.</returns>
        </member>
        <member name="M:Dxura.RP.Game.Cooldown.CheckAndStartCooldown(System.String,System.Single,System.Boolean)">
            <summary>
                Checks if a cooldown is active and starts it if not.
            </summary>
            <param name="cooldownId">The unique identifier for the cooldown.</param>
            <param name="duration">The duration in seconds.</param>
            <param name="notify">If the user should be notified for this cooldown</param>
            <returns>True if the cooldown was already active, false if it was just started.</returns>
            <example>
                if (CooldownManager.Instance.CheckAndStartCooldown("ability_fireball", 5.0f))
                return; // Cooldown is active, don't proceed
            </example>
        </member>
        <member name="T:Dxura.RP.Game.BaseEntity">
            <summary>
                Represents a generic base component that provides common functionality
                for various types of interactable entities such as dropped money, printers, food, etc.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.BaseEntity.HealthComponent">
            <summary>
                Health component (If we have one)
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.BaseEntity.OnDestroyed">
            <summary>
                Called when the entity's health reaches zero. Destroy it
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Entities.PrinterEntity.Explosion">
            <summary>
                What to spawn when we explode?
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.Equipment">
            <summary>
                An equipment component.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.Resource">
            <summary>
                A reference to the equipment's <see cref="T:Dxura.RP.Game.EquipmentResource" />.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.TagBinder">
            <summary>
                A tag binder for this equipment.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.HoldType">
            <summary>
                The default holdtype for this equipment.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.Handedness">
            <summary>
                The default holdtype for this equipment.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.DeploySound">
            <summary>
                What sound should we play when taking this gun out?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.SpeedPenalty">
            <summary>
                How slower do we walk with this equipment out?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.UseCrosshair">
            <summary>
                Should we enable the crosshair?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.OnlyShowCrosshairDot">
            <summary>
                Should we enable the simple crosshair?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.Owner">
            <summary>
                Who owns this gun?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.OwnerId">
            <summary>
                The Guid of the owner's Player
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.IsDeployed">
            <summary>
                Is this equipment currently deployed by the player?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.ViewModel">
            <summary>
                A reference to the equipment's <see cref="!:DXRP.ViewModel" /> if it has one.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.Equipment._owner">
            <summary>
                Cached version of the owner once we fetch it.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipment.ModelRenderer">
            <summary>
                A reference to the equipment's model renderer.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipment.BindTag(System.String,System.Func{System.Boolean})">
            <summary>
                Shorthand to bind a tag.
            </summary>
            <param name="tag"></param>
            <param name="predicate"></param>
        </member>
        <member name="M:Dxura.RP.Game.Equipment.UpdateRenderMode(System.Boolean)">
            <summary>
                Updates the render mode, if we're locally controlling a player, we want to hide the world model.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipment.Deploy">
            <summary>
                Deploy this equipment.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipment.Holster">
            <summary>
                Holster this equipment.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipment.GetHoldType">
            <summary>
                Allow equipment to override holdtypes at any notice.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dxura.RP.Game.Equipment.CreateViewModel(System.Boolean)">
            <summary>
                Creates a viewmodel for the player to use.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Equipments.BuildEquipment.WeaponRay">
            <summary>
                Accessor for the aim ray.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.Equipments.IHandEvents">
            <summary>
            Interface defining hand interaction events that can be triggered on game objects.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.Equipments.HandsEquipment">
            <summary>
            Handles the functionality for picking up, holding, rotating, and throwing objects in the game.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.IsHolding">
            <summary>
            Checks if the player is currently holding an object.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.IsHeldObjectValid">
            <summary>
            Checks if the currently held object is still valid.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.UpdateHeldObjectPosition">
            <summary>
            Updates the position and rotation of the held object.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.UpdateObjectVelocity(Vector3)">
            <summary>
            Updates the object's velocity to move toward the target position.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.UpdateObjectRotation">
            <summary>
            Updates the object's rotation to match the target rotation.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.HandleInputDownWhileNotHolding">
            <summary>
            Handles input actions when the player is not holding an object.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.OnInputUp">
            <summary>
            Handles the releasing of buttons to drop or throw objects.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.IsTooSoonAfterPickup">
            <summary>
            Checks if it's too soon after pickup to release the object.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.TriggerHandEvents(Sandbox.GameObject)">
            <summary>
            Triggers hand events on the object the player is looking at.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.AttemptGrab">
            <summary>
            Attempts to grab an object in the player's line of sight.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.CanGrabProp(Sandbox.GameObject,Sandbox.Rigidbody)">
            <summary>
            Checks if a prop can be grabbed.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.Grab(Sandbox.GameObject,Sandbox.Rigidbody)">
            <summary>
            Grabs an object and prepares it for holding.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.Release(System.Single)">
            <summary>
            Releases the currently held object, optionally applying a throwing force.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.LimitReleaseVelocity">
            <summary>
            Limits the release velocity of the held object.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.ApplyThrowForce(System.Single)">
            <summary>
            Applies a throwing force to the held object.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Equipments.HandsEquipment.RotateHeldObject">
            <summary>
            Rotates the held object based on mouse input.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Tools.FrameTool.ValidateImgurUrl(System.String)">
            <summary>
                Validates if the provided URL is a direct i.imgur.com image link.
            </summary>
            <param name="input">Direct i.imgur.com URL</param>
            <returns>The validated URL or null if invalid</returns>
        </member>
        <member name="M:Dxura.RP.Game.Tools.TvRemoteTool.GetYouTubeVideoId(System.String)">
            <summary>
                Extracts YouTube video ID from a URL or returns the provided ID if it's already in the correct format.
            </summary>
            <param name="input">YouTube URL or video ID</param>
            <returns>The YouTube video ID or null if input is invalid</returns>
        </member>
        <member name="T:Dxura.RP.Game.ViewModel">
            <summary>
                A weapon's viewmodel. It's responsibility is to listen to events from a weapon.
                It should only exist on the client for the currently possessed pawn.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ViewModel.Equipment">
            <summary>
                A reference to the <see cref="P:Dxura.RP.Game.ViewModel.Equipment" /> we want to listen to.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ViewModel.Arms">
            <summary>
                A reference to the viewmodel's arms.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ViewModel.PlayDeployEffects">
            <summary>
                Should we play deploy effects?
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.AmmoComponent">
            <summary>
                An ammo container. It holds ammo for a weapon.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AmmoComponent.Ammo">
            <summary>
                How much ammo are we holding?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AmmoComponent.ReserveAmmo">
            <summary>
                Total reserve ammo the player has for this weapon
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AmmoComponent.MaxReserveAmmo">
            <summary>
                Maximum reserve ammo the player can carry
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AmmoComponent.HasAmmo">
            <summary>
                Do we have any ammo?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AmmoComponent.HasReserveAmmo">
            <summary>
                Do we have any reserve ammo?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AmmoComponent.IsFull">
            <summary>
                Is this container full?
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.AmmoComponent.HostReloadMagazine(System.Int32)">
            <summary>
            Server‐only entry to pull bullets from reserve into the magazine.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.AmmoComponent.UpdateAmmoValues(System.Int32,System.Int32)">
            <summary>
            Broadcast fresh ammo/reserve counts to every client.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.IDroppedWeaponState">
            <summary>
                Interface for components on weapons that persist when dropped.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.IDroppedWeaponState`1">
            <summary>
                Interface for components on weapons that persist when dropped.
                Default implementation will create a copy of this component on the dropped weapon, then copy it back on pickup.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.MeleeWeaponComponent.EffectsRenderer">
            <summary>
                Fetches the desired model renderer that we'll focus effects on like trail effects, muzzle flashes, etc.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MeleeWeaponComponent.GetTrace">
            <summary>
                Runs a trace with all the data we have supplied it, and returns the result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dxura.RP.Game.MeleeWeaponComponent.CanSwing">
            <summary>
                Can we shoot this gun right now?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.RecoilPattern.UseLoopPoints">
            <summary>
                Should we be using loop points?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.RecoilPattern.LoopStart">
            <summary>
                Which point index is our loop point start?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.RecoilPattern.LoopEnd">
            <summary>
                Which point index is our loop point start?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.RecoilPattern.IsLooping">
            <summary>
                Are we looping right now?
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.RecoilPattern.GetPoint(System.Int32@)">
            <summary>
                Tries to get a point, and will wrap around if the index falls over.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Dxura.RP.Game.ReloadWeaponComponent.ReloadTime">
            <summary>
                How long does it take to reload?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ReloadWeaponComponent.EmptyReloadTime">
            <summary>
                How long does it take to reload while empty?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ReloadWeaponComponent.AmmoComponent">
            <summary>
                This is really just the magazine for the weapon.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.ShootWeaponComponent._bloodImpactSound">
            <summary>
                Store a reference to the blood impact sound so we don't have to grab it every time.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.ShootSound">
            <summary>
                What sound should we play when we fire?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.DryFireSound">
            <summary>
                What sound should we play when we dry fire?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.AmmoComponent">
            <summary>
                The current weapon's ammo container.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.RequiresAmmoComponent">
            <summary>
                Does this weapon require an ammo container to fire its bullets?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.MaxEffectsPlayDistance">
            <summary>
                Anything past 2048 units won't produce effects,
                This is squared.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.BloodEjectDistance">
            <summary>
                How far will we trace away from a gunshot wound, to make blood splatters?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.FireModeSwitchDelay">
            <summary>
                How quickly can we switch fire mode?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.SupportedFireModes">
            <summary>
                What fire modes do we support?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.CurrentFireMode">
            <summary>
                What's our current fire mode? (Or Default)
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.BurstAmount">
            <summary>
                How many bullets describes a burst?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.BurstEndDelay">
            <summary>
                How long after we finish a burst until we can shoot again?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.WeaponRay">
            <summary>
                Accessor for the aim ray.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.TimeSinceShoot">
            <summary>
                How long since we shot?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShootWeaponComponent.Effector">
            <summary>
                Fetches the desired model renderer that we'll focus effects on like trail effects, muzzle flashes, etc.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.ShootWeaponComponent.BroadcastShootEffects">
            <summary>
                Play any particle effects such as muzzle flashes.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.ShootWeaponComponent.Shoot">
            <summary>
                Shoot the gun!
            </summary>
            
        </member>
        <member name="M:Dxura.RP.Game.ShootWeaponComponent.IsNearby(Vector3)">
            <summary>
                Are we nearby a position? Used for FX
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Dxura.RP.Game.ShootWeaponComponent.GetShootTrace">
            <summary>
                Runs a trace with all the data we have supplied it, and returns the result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dxura.RP.Game.ShootWeaponComponent.CanShoot">
            <summary>
                Can we shoot this gun right now?
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dxura.RP.Game.WeaponComponent">
            <summary>
                A weapon component. This can be anything that controls a weapon. Aiming, recoil, sway, shooting..
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.WeaponComponent.Equipment">
            <summary>
                The weapon.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.WeaponComponent.Player">
            <summary>
                The player.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.EquipmentResourcePropertyAttribute">
            <summary>
                Show this property in the equipment resource editor.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.InputWeaponComponent">
            <summary>
                A weapon component that reacts to input actions.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.InputWeaponComponent.InputActions">
            <summary>
                What input action are we going to listen for?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.InputWeaponComponent.RequiresAllInputActions">
            <summary>
                Should we perform the action when ALL input actions match, or any?
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.InputWeaponComponent.OnInput">
            <summary>
                Called when the input method succeeds.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.InputWeaponComponent.OnInputUp">
            <summary>
                When the button is up
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.InputWeaponComponent.OnInputDown">
            <summary>
                When the button is down
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.InputWeaponComponent.OnInputUpdate">
            <summary>
                Called every frame when input is being processed
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.InputWeaponComponent.OnInputFixedUpdate">
            <summary>
                For physics-related input handling that needs fixed timestep
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.GameNetworkManager.PlayerPrefab">
            <summary>
                The prefab to spawn for the player to control.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameNetworkManager.OnActive(Sandbox.Connection)">
            <summary>
                Called when a network connection becomes active
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameNetworkManager.CreatePlayer(Sandbox.Connection)">
            <summary>
                Creates a new player and spawns them.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameNetworkManager.CheckForBan(Sandbox.SteamId)">
            <summary>
                Checks if a player is banned from the system and returns the ban message if they are
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameNetworkManager.KickPlayer(Sandbox.Connection,System.String,System.Boolean)">
            <summary>
                Kicks a player with the given reason
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameNetworkManager.FindSpawnLocation">
            <summary>
                Find the most appropriate place to respawn
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.IGameEvents.OnPlayerJoined(Dxura.RP.Game.Player)">
            <summary>
                Called on the host when a new player joins, before NetworkSpawn is called.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.IGameEvents.OnPlayerSpawnedHost(Dxura.RP.Game.Player)">
            <summary>
                Called on the host when a player (re)spawns.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.IGameEvents.OnPlayerKillHost(Dxura.RP.Game.Player)">
            <summary>
                Called on the host when a player dies.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.IGameEvents.OnPlayerJobChangedHost(Dxura.RP.Game.Player,Dxura.RP.Game.JobResource,Dxura.RP.Game.JobResource)">
            <summary>
                Called when a job is changed
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.Npc">
            <summary>
            Class for all non-player characters in the game
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.CurrentTarget">
            <summary>
            Current target for this NPC
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.LastTargetPosition">
            <summary>
            Last recorded position of the target
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.LastAttackTime">
            <summary>
            Time since the last attack was performed
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.LastAiCalculationTime">
            <summary>
            Time since the AI logic was last calculated
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.LastPathUpdateTime">
            <summary>
            Time since the path was last updated
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.AiUpdateInterval">
            <summary>
            How often to update the AI decision making (in seconds)
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.PathUpdateInterval">
            <summary>
            How often to update the movement path when chasing a target (in seconds)
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.AttackRange">
            <summary>
            Distance at which NPC can attack the target
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.PathUpdateThreshold">
            <summary>
            Only update path if target moved at least this far
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.CloseRangeDistance">
            <summary>
            Distance considered "close range" for more frequent updates
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.CloseRangeUpdateInterval">
            <summary>
            Update interval when target is at close range
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.CloseRangeThreshold">
            <summary>
            Movement threshold when target is at close range
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.FarRangeUpdateInterval">
            <summary>
            Standard update interval when target is far away
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.FarRangeThreshold">
            <summary>
            Standard movement threshold when target is far away
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.AttackCooldown">
            <summary>
            Cooldown between attacks (in seconds)
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.AttackDamage">
            <summary>
            Damage dealt per attack
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.FindTarget(Dxura.RP.Game.Player)">
            <summary>
            Finds the nearest target or returns a specified override target
            </summary>
            <param name="overrideTarget">Optional override target</param>
            <returns>The selected target player</returns>
        </member>
        <member name="M:Dxura.RP.Game.Npc.UpdateMovement(Sandbox.GameObject)">
            <summary>
            Updates movement path to chase the target
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.StopMoving">
            <summary>
            Stops the NPC from moving
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.Attack(Sandbox.GameObject)">
            <summary>
            Attacks the target
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.OnAttackEffects">
            <summary>
            Called when the NPC performs an attack
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.OnAttackAnimation">
            <summary>
            Called when the NPC performs an attack animation
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.DisableMovement">
            <summary>
            Override of DisableMovement from BaseNpc
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.PreviousPosition">
            <summary>
            Previous position used for animation calculations
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.IsMoving">
            <summary>
            Whether the NPC is currently moving or not
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.OnStartAnimation">
            <summary>
            Initialize animation state
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.OnFixedUpdateAnimation">
            <summary>
            Update animations based on movement
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.PlayAttackAnimation">
            <summary>
            Play attack animation
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.PlayHitReactionAnimation(Dxura.RP.Game.DamageInfo)">
            <summary>
            Play hit reaction animation when taking damage
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.RewardKiller(Dxura.RP.Game.DamageInfo)">
            <summary>
            Rewards the player who killed this NPC
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.ApplyAreaDamage(Dxura.RP.Game.AreaDamage)">
            <summary>
            Handle area damage application
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.DestroyAfterDeathTime">
            <summary>
            Time in seconds before the NPC's body is removed after death
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.DisplayName">
            <summary>
            NPC display name
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Npc.Color">
            <summary>
            NPC color for UI/display purposes
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Npc.OnStart">
            <summary>
            Called on component start
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.Occlusion">
            <summary>
                Shitty occlusion
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.ArmorComponent">
            <summary>
                A pawn might have armor, which reduces damage.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.DamageFlags.Armor">
            <summary>
                The victim was wearing kevlar.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.DamageFlags.Helmet">
            <summary>
                The victim was wearing a helmet.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.DamageFlags.Melee">
            <summary>
                This was a knife attack.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.DamageFlags.Explosion">
            <summary>
                This was some kind of explosion.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.DamageFlags.FallDamage">
            <summary>
                The victim fell.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.DamageFlags.Burn">
            <summary>
                The victim was burned.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.DamageFlags.WallBang">
            <summary>
                Did the attacker shoot through a wall?
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.DamageFlags.AirShot">
            <summary>
                Was the attacker in the air when doing this damage?
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.DamageInfo">
            <summary>
                Information about damage being dealt to a component.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.DamageInfo.#ctor(Sandbox.Component,System.Single,Sandbox.Component,Vector3,Vector3,Dxura.RP.Game.HitboxTags,Dxura.RP.Game.DamageFlags,System.Single,System.Boolean)">
            <summary>
                Information about damage being dealt to a component.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.DamageInfo.Victim">
            <summary>
                Who took damage?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.DamageInfo.HasArmor">
            <inheritdoc cref="F:Dxura.RP.Game.DamageFlags.Armor" />
        </member>
        <member name="P:Dxura.RP.Game.DamageInfo.HasHelmet">
            <inheritdoc cref="F:Dxura.RP.Game.DamageFlags.Helmet" />
        </member>
        <member name="P:Dxura.RP.Game.DamageInfo.WasMelee">
            <inheritdoc cref="F:Dxura.RP.Game.DamageFlags.Melee" />
        </member>
        <member name="P:Dxura.RP.Game.DamageInfo.WasExplosion">
            <inheritdoc cref="F:Dxura.RP.Game.DamageFlags.Explosion" />
        </member>
        <member name="P:Dxura.RP.Game.DamageInfo.WasFallDamage">
            <inheritdoc cref="F:Dxura.RP.Game.DamageFlags.FallDamage" />
        </member>
        <member name="P:Dxura.RP.Game.DamageInfo.TimeSinceEvent">
            <summary>
                How long since this damage info event happened?
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.IDamageEvents">
            <summary>
                Interface for handling damage-related events in the scene.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.IDamageEvents.OnModifyDamageTaken(Sandbox.Component,Dxura.RP.Game.DamageInfo@)">
            <summary>
                Called when a component is about to take damage, allowing modification of the damage info.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.IDamageEvents.OnModifyDamageGiven(Sandbox.Component,Dxura.RP.Game.DamageInfo@)">
            <summary>
                Called when a component is about to give damage, allowing modification of the damage info.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.IDamageEvents.OnModifyDamageGlobal(Dxura.RP.Game.DamageInfo@)">
            <summary>
                Called for all damage events in the scene, allowing global modification of damage info.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.IDamageEvents.OnDamageTakenHost(Sandbox.Component,Dxura.RP.Game.DamageInfo)">
            <summary>
                Called after a component has taken damage.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.IDamageEvents.OnDamageGivenHost(Sandbox.Component,Dxura.RP.Game.DamageInfo)">
            <summary>
                Called after a component has given damage.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.IDamageEvents.OnKillHost(Sandbox.Component,Dxura.RP.Game.DamageInfo)">
            <summary>
                Called when damage results in a kill.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.DamageExtensions">
            <summary>
                Extension methods for modifying damage information.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.DamageExtensions.ClearDamage(Dxura.RP.Game.DamageInfo@)">
            <summary>
                Clears all health and armor damage from this event.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.DamageExtensions.ScaleDamage(Dxura.RP.Game.DamageInfo@,System.Single)">
            <summary>
                Scales health damage by the given multiplier.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.DamageExtensions.RemoveHelmet(Dxura.RP.Game.DamageInfo@)">
            <summary>
                Flag that the victim's helmet should be removed when this damage is applied.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.DamageExtensions.ApplyArmor(Dxura.RP.Game.DamageInfo@,System.Single)">
            <summary>
                Scales damage by damageScale, adding the difference to armor damage.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.DamageExtensions.AddFlag(Dxura.RP.Game.DamageInfo@,Dxura.RP.Game.DamageFlags)">
            <summary>
                Adds a flag to this damage event.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.DamageExtensions.WithoutFlag(Dxura.RP.Game.DamageInfo@,Dxura.RP.Game.DamageFlags)">
            <summary>
                Removes a flag from this damage event.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.HealthComponent">
            <summary>
                A health component for any kind of GameObject.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.HealthComponent.IsGodMode">
            <summary>
                Are we in god mode?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.HealthComponent.TimeSinceLifeStateChanged">
            <summary>
                How long has it been since life state changed?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.HealthComponent.Health">
            <summary>
                What's our health?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.HealthComponent.State">
            <summary>
                What's our life state?
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.LifeState">
            <summary>
                The component's life state.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.AnimationHelper">
            <summary>
                A reference to the animation helper (normally on the Body GameObject)
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Player.OnFixedUpdateBody">
            <summary>
                Handles body animations (that's seen by other players)
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Player.UpdateClothingFromJob">
            <summary>
                Called to wear an outfit based off current job.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.LockCamera">
            <summary>
                Should camera be locked
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.AimRay">
            <summary>
                Constructs a ray using the controller's eye position and angles.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.HeadshotEffect">
            <summary>
                What effect should we spawn when a player gets headshot?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.HeadshotWithHelmetEffect">
            <summary>
                What effect should we spawn when a player gets headshot while wearing a helmet?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.BloodEffect">
            <summary>
                What effect should we spawn when we hit a player?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.HeadshotSound">
            <summary>
                What sound should we play when a player gets headshot?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.HeadshotWithHelmetSound">
            <summary>
                What sound should we play when a player gets headshot?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.BloodImpactSound">
            <summary>
                What sound should we play when we hit a player?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.JobChangedSound">
            <summary>
                What sound should we play when we change jobs?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.Outline">
            <summary>
                The outline effect for this player.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.CurrentEquipment">
            <summary>
                What weapon are we using?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.Equipment">
            <summary>
                What equipment do we have right now?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.WeaponGameObject">
            <summary>
                A <see cref="T:Sandbox.GameObject" /> that will hold all of our equipment.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.Spread">
            <summary>
                How inaccurate are things like gunshots?
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Player.Drop(Dxura.RP.Game.Equipment,System.Boolean)">
            <summary>
                Try to drop the given held equipment item.
            </summary>
            <param name="weapon">Item to drop.</param>
            <param name="forceRemove">If we can't drop, remove it from the inventory anyway.</param>
        </member>
        <member name="M:Dxura.RP.Game.Player.Switch(Dxura.RP.Game.Equipment)">
            <summary>
                Tries to set the player's current weapon to a specific one, which has to be in the player's inventory.
            </summary>
            <param name="equipment"></param>
        </member>
        <member name="M:Dxura.RP.Game.Player.RemoveEquipment(Dxura.RP.Game.Equipment)">
            <summary>
                Removes the given weapon and destroys it.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Player.Remove(Dxura.RP.Game.EquipmentResource)">
            <summary>
                Removes the given weapon (by its resource data) and destroys it.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.HealthComponent">
            <summary>
                An accessor for health component if we have one.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.ArmorComponent">
            <summary>
                The player's health component
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.MinimumFallDistance">
            <summary>
                Falling over this distance is considered a damaging fall
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.DeathFallDistance">
            <summary>
                If you fall this distance you die
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.DamageMultiplier">
            <summary>
                Multiply damage amount by this much
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.WalletBalance">
            <summary>
                Players current cash balance
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.Local">
            <summary>
                Our local player on this client.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.SteamId">
            <summary>
                The player's ID. This is their SteamID.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.SteamName">
            <summary>
                The player's name, which might have to persist if they leave
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.DisplayName">
            <summary>
                What are we called?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.PlayTime">
            <summary>
                The player's playtime (in seconds)
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.Connection">
            <summary>
                The connection of this player
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.TimeSinceLastRespawn">
            <summary>
                How long since the player last respawned?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.SpawnPosition">
            <summary>
                The position this player last spawned at.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.SpawnRotation">
            <summary>
                The rotation this player last spawned at.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.Job">
            <summary>
                The job this player belongs to.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.IsLocalPlayer">
            <summary>
                Is this the local player for this client
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.PlayerColor">
            <summary>
                Unique colour or team color of this player
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.Player.RespawnState">
            <summary>
                Are we ready to respawn?
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Player.OnJobPropertyChanged(Dxura.RP.Game.JobResource,Dxura.RP.Game.JobResource)">
            <summary>
                Called when <see cref="P:Dxura.RP.Game.Player.Job" /> changes across the network.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AnimationHelper.MoveStyle">
            <summary>
                We can force the model to walk or run, or let it decide based on the speed.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.PlayerGlobals">
            <summary>
                A list of globals that are relevant to the player. Health, armor, VFX that we don't want to hardcode somewhere.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.MaxArmor">
            <summary>
                What's the player's max armor?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.BaseArmorReduction">
            <summary>
                How much should we scale damage by if the player is using armor?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.BaseHelmetReduction">
            <summary>
                How much should we scale damage by if the player is wearing a helmet?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.AimSpread">
            <summary>
                How much spread should we have when aiming down the sights?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.AimVelocitySpreadScale">
            <summary>
                How much spread do we apply when aiming WHEN moving?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.BaseSpreadAmount">
            <summary>
                The base amount of spread all weapons have.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.SpreadVelocityLimit">
            <summary>
                What's our upper limit when applying spread based on velocity?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.VelocitySpreadScale">
            <summary>
                How much spread should we add based on how fast the player is moving
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.CrouchSpreadScale">
            <summary>
                How much spread should we scale by when we're crouching?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.AirSpreadScale">
            <summary>
                How much spread should we scale by when we're in the air?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.Hitboxes">
            <summary>
                Custom damage scales / armor info for each hitbox tag. Uses the first match in the list.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PlayerGlobals.EnableFallDamage">
            <summary>
                Is fall damage enabled?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ContainerEntityResource.Resource">
            <summary>
                Which we have
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ContainerEntityResource.Quantity">
            <summary>
            Quantity of the resource (by default)
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ContainerEntityResource.Unit">
            <summary>
            Unit of the quantity
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.PrinterEntityResource">
            <summary>
                Represents a currency printing machine resource in the game.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PrinterEntityResource.BaseMoneyGeneration">
            <summary>
                The amount of money this printer generates per cycle.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PrinterEntityResource.BalanceCapacity">
            <summary>
                The maximum amount of money this printer can store before stopping.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.PrinterEntityResource.GenerationInterval">
            <summary>
                The time in seconds for the printer to generate money.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShipmentEntityResource.Equipment">
            <summary>
                The equipment this shipment contains
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.ShipmentEntityResource.Quantity">
            <summary>
                How much it contains of said equipment
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.EquipmentSlot">
            <summary>
                What slot is this equipment for?
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.EquipmentSlot.Primary">
            <summary>
                Core/essential items
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.EquipmentSlot.Secondary">
            <summary>
                Everything else
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.EquipmentSlot.Melee">
            <summary>
                Knives etc.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.EquipmentSlot.Utility">
            <summary>
                Grenades etc.
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.EquipmentSlot.Special">
            <summary>
                C4 etc.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.EquipmentResource">
            <summary>
                A resource definition for a piece of equipment. This could be a weapon, or a deployable, or a gadget, or a
                grenade.. Anything really.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.EquipmentResource.Icon">
            <summary>
                The equipment's icon
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.EquipmentResource.IsPurchasable">
            <summary>
                Is this equipment shown in the buy menu
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.EquipmentResource.Price">
            <summary>
                How much is this equipment to buy in the buy menu?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.EquipmentResource.MainPrefab">
            <summary>
                The prefab to create and attach to the player when spawning it in.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.EquipmentResource.ViewModelPrefab">
            <summary>
                The prefab to create when making a viewmodel for this equipment.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.EquipmentResource.WorldModel">
            <summary>
                The equipment's model
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.BaseEvent">
            <summary>
            Base class for all random events in the game
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.BaseEvent.Identifier">
            <summary>
            Unique identifier for the event
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.BaseEvent.Name">
            <summary>
            Display name for the event
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.BaseEvent.Description">
            <summary>
            Description of what the event does
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.BaseEvent.Duration">
            <summary>
            Duration of the event in seconds, or 0 for instant events
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.BaseEvent.Weight">
            <summary>
            Weight for random selection (higher = more likely to be chosen)
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.BaseEvent.IsActive">
            <summary>
            Whether this event is currently active
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.BaseEvent.EndTime">
            <summary>
            When the event will end (if it has a duration)
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.BaseEvent.Start">
            <summary>
            Start the event
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.BaseEvent.End">
            <summary>
            End the event
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.BaseEvent.OnStart">
            <summary>
            Called when the event starts
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.BaseEvent.OnEnd">
            <summary>
            Called when the event ends (for timed events)
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.BaseEvent.OnFixedUpdate">
            <summary>
            Called every frame while the event is active
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.BaseEvent.CanTrigger">
            <summary>
            Check if this event can be triggered in the current game state
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.BaseEvent.NotifyAllPlayers">
            <summary>
            Send a notification to all players about the event starting
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.BaseEvent.NotifyEventEnded">
            <summary>
            Send a notification to all players about the event ending
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.System.Events.EventSystem">
            <summary>
            Manages and schedules random events in the game
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.System.Events.EventSystem.RegisterEvents">
            <summary>
            Register all available event types
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.System.Events.EventSystem.RegisterEventsByReflection">
            <summary>
            Register events by finding all classes that derive from RandomEvent
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.System.Events.EventSystem.ScheduleNextEvent">
            <summary>
            Schedule when the next event should trigger
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.System.Events.EventSystem.TriggerRandomEvent">
            <summary>
            Trigger a random event from the registered events
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.System.Events.EventSystem.StartEvent(Dxura.RP.Game.BaseEvent)">
            <summary>
            Start a specific event
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.System.Events.EventSystem.StartEvent(System.String)">
            <summary>
            Start a specific event by identifier
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.System.Events.EventSystem.EndAllEvents">
            <summary>
            End all active events
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.System.Events.DoublePaydayEvent">
            <summary>
            Event that doubles all job salaries for a limited time
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.System.Events.FlashSaleEvent">
            <summary>
            Event that applies a discount to all purchasable items
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.AchievementSystem">
            <summary>
                Achievement System which tracks gameplay session duration and awards achievements at specific time thresholds.
                Might do other more stuff in future
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.LimitSystem">
            <summary>
                Generic Limit management system
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.LimitSystem.IncrementLimit(System.Guid,System.String)">
            <summary>
                Increment a tracked limit
            </summary>
            <param name="playerId">The player to cooldown</param>
            <param name="limitId">The unique identifier for the limit</param>
        </member>
        <member name="M:Dxura.RP.Game.LimitSystem.SufficientLimit(System.String,System.Nullable{System.Guid})">
            <summary>
                Check if a player has sufficient limit to increment.
            </summary>
            <param name="playerId">The player to cooldown</param>
            <param name="limitId">The unique identifier for the limit</param>
            <returns>True if the action is on cooldown, false otherwise</returns>
        </member>
        <member name="P:Dxura.RP.Game.UI.IContextualObject.GameObject">
            <summary>
                Raw access to the context object's <see cref="P:Dxura.RP.Game.UI.IContextualObject.GameObject" />
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.IContextualObject.ContextPosition">
            <summary>
                Where is this context?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.IContextualObject.ContextPanelTypeOverride">
            <summary>
                Are we overriding the type here?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.IContextualObject.ContextStyles">
            <summary>
                What styles should we apply to the context?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.IContextualObject.DisplayText">
            <summary>
                What text should we show?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.IContextualObject.ContextMaxDistance">
            <summary>
                How far can we see this context?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.IContextualObject.IconSize">
            <summary>
                How big's the context?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.IContextualObject.ShowChevron">
            <summary>
                Should we show a chevron when we're off-screen?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.IContextualObject.InputHint">
            <summary>
                Input hint?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.IContextualObject.LookOpacity">
            <summary>
                Should we dim the context when looking at it?
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.UI.IContextualObject.ShouldShow">
            <summary>
                Should we even show this context?
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dxura.RP.Game.UI.Donut.Value">
            <summary>
                0 to 100
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.ProgressBar.Value">
            <summary>
                0 to 100
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.UI.InputHint.UpdateTexture">
            <summary>
                Checks the current button and updates the glyph.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.Balance.Player">
            The player
        </member>
        <member name="F:Dxura.RP.Game.UI.Context.IsOffScreen">
            <summary>
                Are we off screen?
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.UI.Context.IsBehind">
            <summary>
                Is this context entirely behind the screen?
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.UI.Context.Angle(Vector2,Vector2)">
            <summary>
                Gets the angle (in degrees) between two Vector2s
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="P:Dxura.RP.Game.UI.AssetCard.OnLaunch">
            <summary>
                Called when the icon part of the card is pressed
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.AssetCard.OnMenu">
            <summary>
                Called when the icon part of the card is right clicked
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.EquipmentRow.Slot">
            <summary>
                The equipment's slot
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.EquipmentRow.Equipment">
            <summary>
                The player's equipment.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.UI.Ammo.Player">
            The player
        </member>
        <member name="M:Dxura.RP.Game.UI.LawBoardEntityDisplay.BuildHash">
            <summary>
                the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.DupeAction">
            <summary>
                Represents an action related to dupes that can be undone.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.DupeAction.#ctor(System.Collections.Generic.List{Sandbox.GameObject},System.Guid)">
            <summary>
                Represents an action related to dupes that can be undone.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.DupeAction.Undo(System.Boolean)">
            <summary>
                Undoes the dupe
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.FrameAction">
            <summary>
                Represents an action related to frame that can be undone.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.FrameAction.#ctor(Sandbox.GameObject,System.Guid)">
            <summary>
                Represents an action related to frame that can be undone.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.FrameAction.Undo(System.Boolean)">
            <summary>
                Undoes the frame creation by destroying the frame and removing it from the list.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.PropAction">
            <summary>
                Represents an action related to props that can be undone.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.PropAction.#ctor(Sandbox.GameObject,System.String,System.Guid)">
            <summary>
                Represents an action related to props that can be undone.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.PropAction.Undo(System.Boolean)">
            <summary>
                Undoes the prop creation by destroying the prop and removing it from the list.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.TextAction">
            <summary>
                Represents an action related to text that can be undone.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.TextAction.#ctor(Sandbox.GameObject,System.Guid)">
            <summary>
                Represents an action related to text that can be undone.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.TextAction.Undo(System.Boolean)">
            <summary>
                Undoes the text creation by destroying the text and removing it from the list.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.WeldAction">
            <summary>
                Represents an action related to welds that can be undone.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.WeldAction.#ctor(Sandbox.FixedJoint)">
            <summary>
                Represents an action related to welds that can be undone.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.WeldAction.Undo(System.Boolean)">
            <summary>
                Undoes the weld by destroy joint
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AreaDamage.Damage">
            <summary>
                How much damage to deal each interval.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AreaDamage.Interval">
            <summary>
                How often to deal damage while colliding (in seconds.)
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AreaDamage.TimeLimit">
            <summary>
                Limit to duration of area damage
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.AreaDamage.IgnoreTags">
            <summary>
                Ignore any <see cref="T:Dxura.RP.Game.IAreaDamageReceiver" /> targets with any of these tags.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.MaterialPreloader">
            <summary>
            Preloads materials when players join the game
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.MoveModeNoClip">
            <summary>
                A move mode that allows the player to move freely through the world without collisions.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.MoveModeNoClip.SpeedMultiplier">
            <summary>
                Speed multiplier for faster movement while in noclip mode.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.MoveModeNoClip.MaxSpeed">
            <summary>
                Maximum speed while in noclip mode.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.MoveModeNoClip.NormalSpeed">
            <summary>
                Normal speed in noclip mode
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.MoveModeNoClip.SprintSpeed">
            <summary>
                Sprint speed in noclip mode
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.MoveModeNoClip.AllowGrounding">
            <summary>
                Override the ground check to always return false.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.MoveModeNoClip.AllowFalling">
            <summary>
                Override the falling check to always return false.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeNoClip.Score(Sandbox.PlayerController)">
            <summary>
                Score function that determines if this move mode should be active.
                Return a high value when noclip is activated.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeNoClip.UpdateRigidBody(Sandbox.Rigidbody)">
            <summary>
                Update the rigidbody when in noclip mode.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeNoClip.UpdateMove(Rotation,Vector3)">
            <summary>
                Handle movement input in noclip mode.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeNoClip.AddVelocity">
            <summary>
                Override velocity application to apply smoothed velocity
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeNoClip.OnModeBegin">
            <summary>
                Setup when entering noclip mode
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeNoClip.OnModeEnd(Sandbox.Movement.MoveMode)">
            <summary>
                Handle mode deactivation.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeNoClip.OnUpdateAnimatorState(Sandbox.SkinnedModelRenderer)">
            <summary>
                Update animation state to reflect noclip mode.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.MoveModeSit">
            <summary>
                A move mode that disables all player movement, allowing the player to remain still for animations like sitting.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.MoveModeSit.AllowGrounding">
            <summary>
                Override the ground check to always return true to prevent falling.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.MoveModeSit.AllowFalling">
            <summary>
                Override the falling check to always return false to prevent falling.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeSit.Score(Sandbox.PlayerController)">
            <summary>
                Score function that determines if this move mode should be active.
                Return a high value when a player is in a seat.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeSit.UpdateRigidBody(Sandbox.Rigidbody)">
            <summary>
                Update the rigidbody to disable movement.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeSit.UpdateMove(Rotation,Vector3)">
            <summary>
                No movement is allowed in this mode.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeSit.AddVelocity">
            <summary>
                Override velocity application to stop all movement.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeSit.OnModeEnd(Sandbox.Movement.MoveMode)">
            <summary>
                Handle mode deactivation.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.MoveModeSit.OnUpdateAnimatorState(Sandbox.SkinnedModelRenderer)">
            <summary>
                Update animation state to show sitting.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.OwnedComponent.Owner">
            <summary>
              Connection ID of the owner
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.OwnedComponent.OwnerSteamId">
            <summary>
             SteamID of the owner
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameObjectExtensions.TakeDamageHost(Sandbox.GameObject,Dxura.RP.Game.DamageInfo)">
            <summary>
                Take damage. Only the host can call this.
            </summary>
            <param name="go"></param>
            <param name="damageInfo"></param>
        </member>
        <member name="M:Dxura.RP.Game.GameObjectExtensions.DestroyAsync(Sandbox.GameObject,System.Single)">
            <summary>
                Creates a <see cref="T:Dxura.RP.Game.TimedDestroyComponent" /> which will deferred delete the <see cref="T:Sandbox.GameObject" />.
            </summary>
            <param name="self"></param>
            <param name="seconds"></param>
        </member>
        <member name="T:Dxura.RP.Game.GameUtils">
            <summary>
                A list of game utilities that'll help us achieve common goals with less code... I guess?
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.GameUtils.Players">
            <summary>
                Every Player currently in the world.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameUtils.GetPlayersByJob(Dxura.RP.Game.JobResource)">
            <summary>
                Every Player currently in the world, on the given job.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameUtils.GetPlayersByJobGroup(Dxura.RP.Game.JobGroupResource)">
            <summary>
                Every Player currently in the world, on the given job group.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameUtils.GetPlayerBySteamId(System.Int64)">
            <summary>
                Every Player currently in the world, by given steamId.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameUtils.GetPlayerByConnectionId(System.Guid)">
            <summary>
                Every Player currently in the world, with the given connection.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameUtils.GetPlayerFromComponent(Sandbox.Component)">
            <summary>
                Get a player from a component that belongs to a player or their descendants.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameUtils.GetPlayer(Sandbox.Component)">
            <summary>
                Get a player from a component that belongs to a player or their descendants.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GameUtils.GetSpawnPosition(Ray,System.Int32)">
            <summary>
                Calculates the spawn position for a game object spawn based on the player's aim ray.
            </summary>
            <param name="playerRay"></param>
            <param name="bufferDistance">Distance from surface hit</param>
            <returns></returns>
        </member>
        <member name="T:Dxura.RP.Game.GlobalComponent">
            <summary>
                A component that registers itself as a global.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.GlobalGameNamespace">
            <summary>
                It's nice to be able to access a global anywhere.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GlobalGameNamespace.GetGlobal``1">
            <summary>
                Fetch a global.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Dxura.RP.Game.GlobalSystem" -->
        <!-- Badly formed XML comment ignored for member "M:Dxura.RP.Game.GlobalSystem.#ctor(Sandbox.Scene)" -->
        <member name="P:Dxura.RP.Game.GlobalSystem.Globals">
            <summary>
                A maintained list of all the globals.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.GlobalSystem.GlobalsGameObject">
            <summary>
                The gameobject we're hosting all the globals on.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.GlobalSystem.Register(Dxura.RP.Game.GlobalComponent)">
            <summary>
                Register an instance of a global component to be cached.
            </summary>
            <param name="inst"></param>
        </member>
        <member name="M:Dxura.RP.Game.GlobalSystem.Create``1">
            <summary>
                Creates a global since it doesn't exist in the scene.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dxura.RP.Game.GlobalSystem.Get``1">
            <summary>
                Tries to grab a global, if it exists. If it doesn't, we'll make one.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dxura.RP.Game.Utilities.MathUtils.CalculateSurfaceFlatRotation(Vector3,Vector3)">
            <summary>
            Calculates the rotation based on a surface normal and a direction to the player.
            Handles special case when the normal is close to vertical.
            </summary>
            <param name="normal">The surface normal vector.</param>
            <param name="toPlayer">The vector pointing towards the player.</param>
            <returns>The calculated rotation.</returns>
        </member>
        <member name="M:Dxura.RP.Game.NumberUtils.FormatNumberWithSuffix(System.Single)">
            <summary>
                Format a number with a suffix (K, M, B, etc.)
                Starts formatting from 100,000.
                Also adds comma separators.
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="P:Dxura.RP.Game.ScreenShaker.Main">
            <summary>
                Get any <see cref="T:Dxura.RP.Game.ScreenShaker" /> component on the main camera.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.ScreenShaker.Apply(Sandbox.CameraComponent)">
            <summary>
                Apply any screen shake effects to the specified camera.
            </summary>
            <param name="camera"></param>
        </member>
        <member name="M:Dxura.RP.Game.ScreenShaker.Add(Dxura.RP.Game.ScreenShake)">
            <summary>
                Add a new screen shake effect to the list.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.TagBinder">
            <summary>
                A utility component that lets you have tags update based on conditions,
                similarly to how we have Panel.BindClass
            </summary>
        </member>
        <member name="F:Dxura.RP.Game.TagBinder._binds">
            <summary>
                A cache of binds.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.TagBinder.HasExistingBind(System.String)">
            <summary>
                Do we have a bind already?
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:Dxura.RP.Game.TagBinder.BindTag(System.String,System.Func{System.Boolean})">
            <summary>
                Bind a tag to a specific condition. Must not exist.
            </summary>
            <param name="tag"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="T:Dxura.RP.Game.TimedDestroyComponent">
            <summary>
                A simple component that destroys its GameObject.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.TimedDestroyComponent.Time">
            <summary>
                How long until we destroy the GameObject.
            </summary>
        </member>
        <member name="P:Dxura.RP.Game.TimedDestroyComponent.TimeUntilDestroy">
            <summary>
                The real time until we destroy the GameObject.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.GarbagePoint">
            <summary>
                A spawn point for garbage
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.JailPoint">
            <summary>
                A spawn point for prisoners
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.Prop">
            <summary>
                A component that manages the interaction and networking of prop entities, including cloud models.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Prop.SetModel(System.String)">
            <summary>
                Initializes the cloud model for the prop by fetching and loading it from the cloud.
                Uses a semaphore to ensure only one cloud model loads at a time.
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Prop.OnStart">
            <summary>
                Called when the component starts. Initializes the prop and its related components.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.SpawnProtection">
            <summary>
                Makes respawned players invulnerable for a given duration, or until they move / shoot.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.Text">
            <summary>
                A component that represents a text prop in the game world.
            </summary>
        </member>
        <member name="T:Dxura.RP.Game.WorldSpawnPoint">
            <summary>
            Dictates where players will spawn when they join DXRP
            </summary>
        </member>
        <member name="M:Dxura.RP.Game.Web.BuildHash">
            <summary>
                the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
            </summary>
        </member>
        <member name="T:Resource">
            <summary>
                Represents a resource of anything.
            </summary>
        </member>
        <member name="M:PlayerNameplate.BuildHash">
            <summary>
                the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
            </summary>
        </member>
    </members>
</doc>
